{
  "info": {
    "name": "Verification System Tests",
    "description": "Complete test collection for student and driver verification system",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{auth_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8080/api/v1",
      "type": "string"
    },
    {
      "key": "student_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "driver_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "admin_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "student_user_id",
      "value": "1",
      "type": "string"
    },
    {
      "key": "driver_user_id",
      "value": "2",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "üîê Authentication",
      "item": [
        {
          "name": "Login Student",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('student_token', response.access_token);",
                  "    pm.collectionVariables.set('auth_token', response.access_token);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"student1@test.edu\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            }
          }
        },
        {
          "name": "Login Driver Candidate",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('driver_token', response.access_token);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"driver1@test.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            }
          }
        },
        {
          "name": "Login Admin",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('admin_token', response.access_token);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@test.com\",\n  \"password\": \"admin123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            }
          }
        }
      ]
    },
    {
      "name": "üéì Student Verification Flow",
      "item": [
        {
          "name": "1. Submit Student Verification",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "pm.collectionVariables.set('auth_token', pm.collectionVariables.get('student_token'));"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "document",
                  "type": "file",
                  "src": "/path/to/student_id_card.jpg"
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/users/me/student-verifications",
              "host": ["{{base_url}}"],
              "path": ["users", "me", "student-verifications"]
            }
          }
        },
        {
          "name": "2. Admin View Pending Students",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "pm.collectionVariables.set('auth_token', pm.collectionVariables.get('admin_token'));"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/verification/students/pending?page=0&size=10",
              "host": ["{{base_url}}"],
              "path": ["verification", "students", "pending"],
              "query": [
                {
                  "key": "page",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "3. Admin Get Student Details",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "pm.collectionVariables.set('auth_token', pm.collectionVariables.get('admin_token'));"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/verification/students/{{student_user_id}}",
              "host": ["{{base_url}}"],
              "path": ["verification", "students", "{{student_user_id}}"]
            }
          }
        },
        {
          "name": "4. Admin Approve Student",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "pm.collectionVariables.set('auth_token', pm.collectionVariables.get('admin_token'));"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"notes\": \"Student ID verified successfully\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/verification/students/{{student_user_id}}/approve",
              "host": ["{{base_url}}"],
              "path": ["verification", "students", "{{student_user_id}}", "approve"]
            }
          }
        },
        {
          "name": "5. Admin Reject Student",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "pm.collectionVariables.set('auth_token', pm.collectionVariables.get('admin_token'));"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"rejectionReason\": \"Document is not clear, please resubmit\",\n  \"notes\": \"Photo quality is poor\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/verification/students/{{student_user_id}}/reject",
              "host": ["{{base_url}}"],
              "path": ["verification", "students", "{{student_user_id}}", "reject"]
            }
          }
        },
        {
          "name": "6. Admin Bulk Approve",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "pm.collectionVariables.set('auth_token', pm.collectionVariables.get('admin_token'));"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"verificationIds\": [1, 2, 3],\n  \"notes\": \"Batch approved after document review\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/verification/students/bulk-approve",
              "host": ["{{base_url}}"],
              "path": ["verification", "students", "bulk-approve"]
            }
          }
        },
        {
          "name": "7. View Student History",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "pm.collectionVariables.set('auth_token', pm.collectionVariables.get('admin_token'));"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/verification/students/history?page=0&size=10",
              "host": ["{{base_url}}"],
              "path": ["verification", "students", "history"],
              "query": [
                {
                  "key": "page",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "10"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "üöó Driver Verification Flow",
      "item": [
        {
          "name": "1. Submit Driver Verification",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "pm.collectionVariables.set('auth_token', pm.collectionVariables.get('driver_token'));"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "driverLicense",
                  "type": "file",
                  "src": "/path/to/driver_license.jpg"
                },
                {
                  "key": "vehicleRegistration",
                  "type": "file",
                  "src": "/path/to/vehicle_reg.jpg"
                },
                {
                  "key": "vehicleModel",
                  "value": "Honda Wave Alpha",
                  "type": "text"
                },
                {
                  "key": "plateNumber",
                  "value": "29A-12345",
                  "type": "text"
                },
                {
                  "key": "year",
                  "value": "2020",
                  "type": "text"
                },
                {
                  "key": "color",
                  "value": "Red",
                  "type": "text"
                },
                {
                  "key": "licenseNumber",
                  "value": "B12345678",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/users/me/driver-verifications",
              "host": ["{{base_url}}"],
              "path": ["users", "me", "driver-verifications"]
            }
          }
        },
        {
          "name": "2. Admin View Pending Drivers",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "pm.collectionVariables.set('auth_token', pm.collectionVariables.get('admin_token'));"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/verification/drivers/pending?page=0&size=10",
              "host": ["{{base_url}}"],
              "path": ["verification", "drivers", "pending"],
              "query": [
                {
                  "key": "page",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "3. Admin Get Driver KYC",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "pm.collectionVariables.set('auth_token', pm.collectionVariables.get('admin_token'));"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/verification/drivers/{{driver_user_id}}/kyc",
              "host": ["{{base_url}}"],
              "path": ["verification", "drivers", "{{driver_user_id}}", "kyc"]
            }
          }
        },
        {
          "name": "4. Admin Approve Documents",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "pm.collectionVariables.set('auth_token', pm.collectionVariables.get('admin_token'));"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"notes\": \"All documents verified successfully\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/verification/drivers/{{driver_user_id}}/approve-docs",
              "host": ["{{base_url}}"],
              "path": ["verification", "drivers", "{{driver_user_id}}", "approve-docs"]
            }
          }
        },
        {
          "name": "5. Admin Approve License",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "pm.collectionVariables.set('auth_token', pm.collectionVariables.get('admin_token'));"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"notes\": \"License verified against government database\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/verification/drivers/{{driver_user_id}}/approve-license",
              "host": ["{{base_url}}"],
              "path": ["verification", "drivers", "{{driver_user_id}}", "approve-license"]
            }
          }
        },
        {
          "name": "6. Admin Approve Vehicle",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "pm.collectionVariables.set('auth_token', pm.collectionVariables.get('admin_token'));"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"notes\": \"Vehicle registration confirmed\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/verification/drivers/{{driver_user_id}}/approve-vehicle",
              "host": ["{{base_url}}"],
              "path": ["verification", "drivers", "{{driver_user_id}}", "approve-vehicle"]
            }
          }
        },
        {
          "name": "7. Admin Background Check - Pass",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "pm.collectionVariables.set('auth_token', pm.collectionVariables.get('admin_token'));"
                ]
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"result\": \"passed\",\n  \"details\": \"No criminal record found\",\n  \"conductedBy\": \"Admin Team\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/verification/drivers/{{driver_user_id}}/background-check",
              "host": ["{{base_url}}"],
              "path": ["verification", "drivers", "{{driver_user_id}}", "background-check"]
            }
          }
        },
        {
          "name": "8. Admin Background Check - Fail",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "pm.collectionVariables.set('auth_token', pm.collectionVariables.get('admin_token'));"
                ]
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"result\": \"failed\",\n  \"details\": \"Criminal record found\",\n  \"conductedBy\": \"Admin Team\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/verification/drivers/3/background-check",
              "host": ["{{base_url}}"],
              "path": ["verification", "drivers", "3", "background-check"]
            }
          }
        },
        {
          "name": "9. Admin Reject Driver",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "pm.collectionVariables.set('auth_token', pm.collectionVariables.get('admin_token'));"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"rejectionReason\": \"Fake documents detected\",\n  \"notes\": \"Documents appear to be forged\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/verification/drivers/4/reject",
              "host": ["{{base_url}}"],
              "path": ["verification", "drivers", "4", "reject"]
            }
          }
        }
      ]
    },
    {
      "name": "üìä Admin Dashboard",
      "item": [
        {
          "name": "Driver Statistics",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "pm.collectionVariables.set('auth_token', pm.collectionVariables.get('admin_token'));"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/verification/drivers/stats",
              "host": ["{{base_url}}"],
              "path": ["verification", "drivers", "stats"]
            }
          }
        }
      ]
    },
    {
      "name": "üß™ Edge Cases & Validation",
      "item": [
        {
          "name": "Submit Verification Without Auth",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "document",
                  "type": "file",
                  "src": "/path/to/test.jpg"
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/users/me/student-verifications",
              "host": ["{{base_url}}"],
              "path": ["users", "me", "student-verifications"]
            }
          }
        },
        {
          "name": "Reject Without Reason",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "pm.collectionVariables.set('auth_token', pm.collectionVariables.get('admin_token'));"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"notes\": \"No reason provided\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/verification/students/{{student_user_id}}/reject",
              "host": ["{{base_url}}"],
              "path": ["verification", "students", "{{student_user_id}}", "reject"]
            }
          }
        },
        {
          "name": "Access Admin Endpoint as Student",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "pm.collectionVariables.set('auth_token', pm.collectionVariables.get('student_token'));"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/verification/students/pending",
              "host": ["{{base_url}}"],
              "path": ["verification", "students", "pending"]
            }
          }
        }
      ]
    }
  ]
}